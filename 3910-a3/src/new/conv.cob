IDENTIFICATION DIVISION.
PROGRAM-ID. conv.
ENVIRONMENT DIVISION.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT STANDARD-OUTPUT ASSIGN TO DISPLAY.
DATA DIVISION.
FILE SECTION.
FD STANDARD-OUTPUT.
    01 STDOUT-RECORD  PICTURE X(80).
WORKING-STORAGE SECTION.
01 FORMATTED-INTEGER	PIC Z(04)9.
77 SUMM PIC 9(10) VALUE 0.
77 GOOD PIC 9(1) VALUE 0.
01 PREV PIC X(1) VALUE ' '.
77 I    PICTURE S99 USAGE IS COMPUTATIONAL.
LINKAGE SECTION.
77 IN-LINE	PIC X(30).
01 W-SUB    PIC 9(2).         
PROCEDURE DIVISION USING In-Line, W-SUB.
	*>Reset variables
	MOVE 0 TO SUMM
	MOVE ' ' TO PREV
	PERFORM VARYING I FROM 1 BY 1 UNTIL I IS GREATER THAN W-SUB + 1 
			*>Reset valid roman numerial flag
			MOVE 0 TO GOOD
			IF I IS GREATER THAN 1
				MOVE IN-LINE(I - 1:1) TO PREV
			END-IF

			*>Start IF/ELSEIF code block for parsing
			IF IN-LINE(I:1) IS EQUAL TO 'M'
					COMPUTE SUMM = SUMM + 1000
					MOVE 1 TO GOOD

					*>Ugly way of reducing previous inputs
					IF PREV IS EQUAL TO 'I'
						COMPUTE SUMM = SUMM - 2 
					END-IF
					IF PREV IS EQUAL TO 'X'
						COMPUTE SUMM = SUMM - 2 * 10
					END-IF
					IF PREV IS EQUAL TO 'L'
						COMPUTE SUMM = SUMM - 2 * 50
					END-IF
					IF PREV IS EQUAL TO 'C'
						COMPUTE SUMM = SUMM - 2 * 100
					END-IF
			ELSE
				IF IN-LINE(I:1) IS EQUAL TO 'D'
		 			COMPUTE SUMM = SUMM + 500
		 			MOVE 1 TO GOOD
		 			IF PREV IS EQUAL TO 'X'
						COMPUTE SUMM = SUMM - 2 * 10
					END-IF
					IF PREV IS EQUAL TO 'L'
						COMPUTE SUMM = SUMM - 2 * 50
					END-IF
					IF PREV IS EQUAL TO 'C'
						COMPUTE SUMM = SUMM - 2 * 100
					END-IF
			ELSE
				IF IN-LINE(I:1) IS EQUAL TO 'C'
					COMPUTE SUMM = SUMM + 100
					MOVE 1 TO GOOD
					IF PREV IS EQUAL TO 'I'
						COMPUTE SUMM = SUMM - 2 
					END-IF
					IF PREV IS EQUAL TO 'X'
						COMPUTE SUMM = SUMM - 2 * 10
					END-IF
					IF PREV IS EQUAL TO 'L'
						COMPUTE SUMM = SUMM - 2 * 50
					END-IF
		 	ELSE
		 		IF IN-LINE(I:1) IS EQUAL TO 'L'
		 			COMPUTE SUMM = SUMM + 50
		 			MOVE 1 TO GOOD
		 			IF PREV IS EQUAL TO 'I'
						COMPUTE SUMM = SUMM - 2 
					END-IF
					IF PREV IS EQUAL TO 'X'
						COMPUTE SUMM = SUMM - 2 * 10
					END-IF

		 	ELSE
		  		IF IN-LINE(I:1) IS EQUAL TO 'X'
					COMPUTE SUMM = SUMM + 10
					MOVE 1 TO GOOD
					IF PREV IS EQUAL TO 'I'
						COMPUTE SUMM = SUMM - 2
					END-IF

		 	ELSE
		 		IF IN-LINE(I:1) IS EQUAL TO 'V'
					COMPUTE SUMM = SUMM + 5
					MOVE 1 TO GOOD
					IF PREV IS EQUAL TO 'I'
						COMPUTE SUMM = SUMM - 2
					END-IF

		 	ELSE
		 		IF IN-LINE(I:1) IS EQUAL TO 'I'
				COMPUTE SUMM = SUMM + 1
				MOVE 1 TO GOOD
			ELSE
				*>IF an invalid roman numeral is detected show an error and terminate loop
				IF GOOD IS EQUAL TO 0 AND IN-LINE IS NOT EQUAL TO "Q"
					DISPLAY "NOT VALID!"
					MOVE 0 TO GOOD
					MOVE 0 TO SUMM
					EXIT PERFORM
			END-IF
			END-IF
			END-IF
			END-IF
			END-IF
			END-IF
			END-IF
		END-IF
	END-PERFORM

	*>Only output the sum if the roman numerals are all valid
	IF GOOD IS EQUAL TO 1
		MOVE SUMM TO FORMATTED-INTEGER
		DISPLAY In-Line  FORMATTED-INTEGER
	END-IF.

